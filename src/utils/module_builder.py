import json
from pathlib import Path
from typing import Optional

from .log_helper import log

def build_module_structure(base_output_dir: Optional[str] = None) -> Path:
    """
    Creates the full directory structure for the FoundryVTT module:
      l5r5e-custom-compendiums/
        â”œâ”€â”€ module.json
        â”œâ”€â”€ README.md
        â”œâ”€â”€ register-babele.js
        â””â”€â”€ compendiums/en/

    Args:
        base_output_dir (str | None): Root directory where the module will be created (default = ./output)

    Returns:
        Path: Full path to the 'compendiums/en' directory where JSON files should be generated.
    """
    root = Path(base_output_dir or "./output").resolve() / "l5r5e-custom-compendiums"
    compendium_dir = root / "compendiums" / "en"
    compendium_dir.mkdir(parents=True, exist_ok=True)

    # --- module.json ---
    module_data = {
        "id": "l5r5e-custom-compendiums",
        "title": "L5R5e Custom Compendiums",
        "description": "FoundryVTT module containing custom compendiums for L5R5e.",
        "url": "https://gitlab.com/teaml5r/l5r5e-custom-compendiums",
        "readme": "https://gitlab.com/teaml5r/l5r5e-custom-compendiums/-/blob/master/README.md",
        "changelog": "https://gitlab.com/teaml5r/l5r5e-custom-compendiums/-/blob/master/CHANGELOG.md",
        "license": "https://gitlab.com/teaml5r/l5r5e-custom-compendiums/-/blob/master/LICENSE.md",
        "version": "1.9",
        "compatibility": {"minimum": "13", "verified": "13", "maximum": "13"},
        "authors": [
            {"name": "Vlyan", "discord": "Vlyan#6771", "url": "https://ko-fi.com/vlyan"},
            {"name": "Eduardo Bugs"},
        ],
        "scripts": ["register-babele.js"],
        "relationships": {
            "systems": [{"id": "l5r5e", "type": "system"}],
            "requires": [{"id": "babele", "type": "module"}],
        },
    }

    module_file = root / "module.json"
    with open(module_file, "w", encoding="utf-8") as f:
        json.dump(module_data, f, ensure_ascii=False, indent=2)

    # --- README.md ---
    readme_file = root / "README.md"
    if not readme_file.exists():
        readme_file.write_text("Autogenerated by L5R5e Custom Compendiums Maker v1.9.")

    # --- register-babele.js ---
    babele_file = root / "register-babele.js"
    if not babele_file.exists():
        babele_file.write_text(
            "Hooks.once('babele.init', (babele) => {"
            "    babele.register({"
            "        module: 'l5r5e-custom-compendiums',"
            "        lang: 'en',"
            "        dir: 'compendiums/en'"
            "    });"
            "});"
        )

    log.success(f"ðŸš€ Module prepared at: {root}")
    return compendium_dir
